import { cache } from 'react';
import getInitializedConfig from 'use-intl/dist/src/react/getInitializedConfig';
import createRequestConfig from '../server/createRequestConfig';
import getLocale from './getLocale';
const receiveRuntimeConfig = cache(async (locale, getConfig) => {
    let result = getConfig === null || getConfig === void 0 ? void 0 : getConfig({ locale });
    if (result instanceof Promise) {
        result = await result;
    }
    return {
        ...result,
        // Make sure `now` is consistent across the request in case none was configured
        now: (result === null || result === void 0 ? void 0 : result.now) || new Date()
    };
});
const getConfig = cache(async () => {
    const locale = getLocale();
    const runtimeConfig = await receiveRuntimeConfig(locale, createRequestConfig);
    const opts = { ...runtimeConfig, locale };
    return getInitializedConfig(opts);
});
export default getConfig;
//# sourceMappingURL=getConfig.js.map